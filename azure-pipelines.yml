resources:
  - repo: self

trigger:
  tags:
    include:
      - "*"
  branches:
    include:
      - main

variables:
  buildConfiguration: "Release"
  VersionNumber: "1.0.0"

stages:
  - stage: build
    displayName: Build
    variables:
      - group: "Global"
    jobs:
      - job: Build
        pool:
          vmImage: "windows-latest"
        steps:
          - script: |
              echo ##vso[task.setvariable variable=VersionNumber;]$(Build.SourceBranchName)
            condition: startsWith(variables['build.sourceBranch'], 'refs/tags/')

          - task: replacetokens@5
            inputs:
              rootDirectory: "$(System.DefaultWorkingDirectory)"
              targetFiles: |
                "**/*Manifest.cs"
                "**/*Etch.OrchardCore.AdminTheme.csproj"
              actionOnMissing: "fail"
              tokenPrefix: "$("
              tokenSuffix: ")"
              writeBOM: false
              encoding: "utf-8"

          - task: DotNetCoreCLI@2
            displayName: "dotnet build"
            inputs:
              arguments: "-c $(BuildConfiguration)"

          - task: DotNetCoreCLI@2
            displayName: "dotnet pack"
            inputs:
              command: pack

          - task: PublishPipelineArtifact@0
            displayName: "Publish Pipeline Artifact"
            inputs:
              targetPath: "$(Build.ArtifactStagingDirectory)"

  - stage: publish
    displayName: NuGet Publish
    dependsOn: build
    condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/tags/'))
    jobs:
      - job: Publish
        pool:
          vmImage: "windows-latest"
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              source: "current"
              path: "$(Pipeline.Workspace)"
          - task: NuGetCommand@2
            displayName: "NuGet push"
            inputs:
              command: push
              packagesToPush: "$(Pipeline.Workspace)/**/drop/*.nupkg"
              nuGetFeedType: external
              publishFeedCredentials: "NuGet"
